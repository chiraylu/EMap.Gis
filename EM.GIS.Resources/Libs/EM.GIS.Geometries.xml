<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EM.GIS.Geometries</name>
    </assembly>
    <members>
        <member name="T:EM.GIS.Geometries.Extent">
            <summary>
            范围
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:EM.GIS.Geometries.Extent"/> class from the specified ordinates.
            </summary>
            <param name="xMin">The minimum X value.</param>
            <param name="yMin">The minimum Y value.</param>
            <param name="xMax">The maximum X value.</param>
            <param name="yMax">The maximum Y value.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.#ctor(System.Double[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EM.GIS.Geometries.Extent"/> class based on the given values.
            </summary>
            <param name="values">Values used to initialize XMin, YMin, XMax, YMax in the given order.</param>
            <param name="offset">Offset indicates at which position we can find MinX. The other values follow directly after that.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:EM.GIS.Geometries.Extent"/> class.
            </summary>
            <param name="values">Values used to initialize XMin, YMin, XMax, YMax in the given order.</param>
        </member>
        <member name="P:EM.GIS.Geometries.Extent.Center">
            <summary>
            Gets the Center of this extent.
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.Extent.Height">
            <summary>
            Gets or sets the height. Getting this returns MaxY - MinY. Setting this will update MinY, keeping MaxY the same. (Pinned at top left corner).
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.Extent.X">
            <summary>
            Gets or sets the X. Getting this returns MinX. Setting this will shift both MinX and MaxX, keeping the width the same.
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.Extent.Y">
            <summary>
            Gets or sets the Y. Getting this will return MaxY. Setting this will shift both MinY and MaxY, keeping the height the same.
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.op_Equality(EM.GIS.Geometries.Extent,EM.GIS.Geometries.IExtent)">
            <summary>
            Equality test
            </summary>
            <param name="left">First extent to test.</param>
            <param name="right">Second extent to test.</param>
            <returns>True, if the extents equal.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.op_Inequality(EM.GIS.Geometries.Extent,EM.GIS.Geometries.IExtent)">
            <summary>
            Inequality test
            </summary>
            <param name="left">First extent to test.</param>
            <param name="right">Second extent to test.</param>
            <returns>True, if the extents do not equal.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Parse(System.String)">
            <summary>
            This allows parsing the X and Y values from a string version of the extent as: 'X[-180|180], Y[-90|90]'
            Where minimum always precedes maximum. The correct M or MZ version of extent will be returned if the string has those values.
            </summary>
            <param name="text">The string text to parse.</param>
            <returns>The parsed extent.</returns>
            <exception cref="!:ExtentParseException">Is thrown if the string could not be parsed to an extent.</exception>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.TryParse(System.String,EM.GIS.Geometries.IExtent@,System.String@)">
            <summary>
            This allows parsing the X and Y values from a string version of the extent as: 'X[-180|180], Y[-90|90]'
            Where minimum always precedes maximum. The correct M or MZ version of extent will be returned if the string has those values.
            </summary>
            <param name="text">Text that contains the extent values.</param>
            <param name="result">Extent that was created.</param>
            <param name="nameFailed">Indicates which value failed.</param>
            <returns>True if the string could be parsed to an extent.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Clone">
            <summary>
            Produces a clone, rather than using this same object.
            </summary>
            <returns>The cloned Extent.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Contains(EM.GIS.Geometries.IExtent)">
            <summary>
            Tests if the specified extent is contained by this extent.
            </summary>
            <param name="ext">Extent that might be contained.</param>
            <returns>True if this extent contains the specified extent.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if ext is null.</exception>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Contains(EM.GIS.Geometries.ICoordinate)">
            <summary>
            Tests if the specified coordinate is contained by this extent.
            </summary>
            <param name="c">The coordinate to test.</param>
            <returns>True if this extent contains the specified coordinate.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if c is null.</exception>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.CopyFrom(EM.GIS.Geometries.IExtent)">
            <summary>
            Copies the MinX, MaxX, MinY, MaxY values from extent.
            </summary>
            <param name="extent">Any IExtent implementation.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Equals(System.Object)">
            <summary>
            Checks whether this extent and the specified extent are equal.
            </summary>
            <param name="obj">Second Extent to check.</param>
            <returns>True, if extents are the same (either both null or equal in all X and Y values).</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.ExpandBy(System.Double,System.Double)">
            <summary>
            Expand will adjust both the minimum and maximum by the specified sizeX and sizeY
            </summary>
            <param name="padX">The amount to expand left and right.</param>
            <param name="padY">The amount to expand up and down.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.ExpandBy(System.Double)">
            <summary>
            This expand the extent by the specified padding on all bounds. So the width will
            change by twice the padding for instance. To Expand only x and y, use
            the overload with those values explicitly specified.
            </summary>
            <param name="padding">The double padding to expand the extent.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.ExpandToInclude(EM.GIS.Geometries.IExtent)">
            <summary>
            Expands this extent to include the domain of the specified extent.
            </summary>
            <param name="ext">The extent to include.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.ExpandToInclude(System.Double,System.Double)">
            <summary>
            Expands this extent to include the domain of the specified point.
            </summary>
            <param name="x">The x value to include.</param>
            <param name="y">The y value to include.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.GetHashCode">
            <summary>
            Spreads the values for the basic X, Y extents across the whole range of int.
            Repetition will occur, but it should be rare.
            </summary>
            <returns>Integer</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Intersection(EM.GIS.Geometries.IExtent)">
            <summary>
            Calculates the intersection of this extent and the other extent. A result
            with a min greater than the max in either direction is considered invalid
            and represents no intersection.
            </summary>
            <param name="other">The other extent to intersect with.</param>
            <returns>The resulting extent.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Intersects(EM.GIS.Geometries.ICoordinate)">
            <summary>
            Tests if this extent intersects the specified coordinate.
            </summary>
            <param name="c">The coordinate that might intersect this extent.</param>
            <returns>True if this extent intersects the specified coordinate.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if c is null.</exception>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Intersects(System.Double,System.Double)">
            <summary>
            Tests for intersection with the specified coordinate.
            </summary>
            <param name="x">The double ordinate to test intersection with in the X direction.</param>
            <param name="y">The double ordinate to test intersection with in the Y direction.</param>
            <returns>True if a point with the specified x and y coordinates is within or on the border
            of this extent object. NAN values will always return false.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Intersects(EM.GIS.Geometries.IExtent)">
            <summary>
            Tests if this extent intersects the specified extent.
            </summary>
            <param name="ext">The extent that might intersect this extent.</param>
            <returns>True if this extent intersects the specified extent.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if ext is null.</exception>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.IsEmpty">
            <summary>
            If this is undefined, it will have a min that is larger than the max, or else any value is NaN.
            This only applies to the X and Y terms. Check HasM or HasZ for higher dimensions.
            </summary>
            <returns>Boolean, true if the envelope has not had values set for it yet.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.SetCenter(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This centers the X and Y aspect of the extent on the specified center location.
            </summary>
            <param name="centerX">The X value of the center coordinate to set.</param>
            <param name="centerY">The Y value of the center coordinate to set.</param>
            <param name="width">The new extent width.</param>
            <param name="height">The new extent height.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.SetCenter(EM.GIS.Geometries.ICoordinate,System.Double,System.Double)">
            <summary>
            This centers the X and Y aspect of the extent on the specified center location.
            </summary>
            <param name="center">The center coordinate to set.</param>
            <param name="width">The new extent width.</param>
            <param name="height">The new extent height.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if center is null.</exception>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.SetCenter(EM.GIS.Geometries.ICoordinate)">
            <summary>
            This centers the extent on the specified coordinate, keeping the width and height the same.
            </summary>
            <param name="center">Center value which is used to center the extent.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if center is null.</exception>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.ToString">
            <summary>
            Creates a string that shows the extent.
            </summary>
            <returns>The string form of the extent.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Within(EM.GIS.Geometries.IExtent)">
            <summary>
            Tests if this extent is within the specified extent.
            </summary>
            <param name="ext">Extent that might contain this extent.</param>
            <returns>True if this extent is within the specified extent.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if ext is null.</exception>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.TryExtract(System.String,System.String,System.Double@,System.Double@)">
            <summary>
            Attempts to extract the min and max from one element of text. The element should be
            formatted like X[1.5|2.7] using an invariant culture.
            </summary>
            <param name="entireText">Complete text from which the values should be parsed.</param>
            <param name="name">The name of the dimension, like X.</param>
            <param name="min">The minimum that gets assigned</param>
            <param name="max">The maximum that gets assigned</param>
            <returns>Boolean, true if the parse was successful.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.TryParseExtremes(System.String,System.Double@,System.Double@)">
            <summary>
            Attempts to extract the min and max from the text. The text should be formatted like 1.5|2.7 using an invariant culture.
            </summary>
            <param name="numeric">Text that should be parsed.</param>
            <param name="min">The minimum that gets assigned.</param>
            <param name="max">The maximum that gets assigned.</param>
            <returns>True, if the numeric was parsed successfully.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Contains(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Tests if the specified extent is contained by this extent.
            </summary>
            <param name="minX">MinX value of the extent that might be contained.</param>
            <param name="maxX">MaxX value of the extent that might be contained.</param>
            <param name="minY">MinY value of the extent that might be contained.</param>
            <param name="maxY">MaxY value of the extent that might be contained.</param>
            <returns>True if this extent contains the specified extent.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.ExpandToInclude(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Expands this extent to include the domain of the specified extent.
            </summary>
            <param name="minX">MinX value of the extent that might intersect this extent.</param>
            <param name="maxX">MaxX value of the extent that might intersect this extent.</param>
            <param name="minY">MinY value of the extent that might intersect this extent.</param>
            <param name="maxY">MaxY value of the extent that might intersect this extent.</param>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Intersects(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Tests if this extent intersects the specified extent.
            </summary>
            <param name="minX">MinX value of the extent that might intersect this extent.</param>
            <param name="maxX">MaxX value of the extent that might intersect this extent.</param>
            <param name="minY">MinY value of the extent that might intersect this extent.</param>
            <param name="maxY">MaxY value of the extent that might intersect this extent.</param>
            <returns>True if this extent intersects the specified extent.</returns>
        </member>
        <member name="M:EM.GIS.Geometries.Extent.Within(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Tests if this extent is within the specified extent.
            </summary>
            <param name="minX">MinX value of the extent that might contain this extent.</param>
            <param name="maxX">MaxX value of the extent that might contain this extent.</param>
            <param name="minY">MinY value of the extent that might contain this extent.</param>
            <param name="maxY">MaxY value of the extent that might contain this extent.</param>
            <returns>True if this extent is within the specified extent.</returns>
        </member>
        <member name="T:EM.GIS.Geometries.GeometryType">
            <summary>
            要素类型
            </summary>
        </member>
        <member name="T:EM.GIS.Geometries.ICoordinate">
            <summary>
            坐标接口
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.ICoordinate.Item(System.Int32)">
            <summary>
            返回指定索引值
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:EM.GIS.Geometries.ICoordinate.MaxPossibleOrdinates">
            <summary>
            最大索引个数
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.ICoordinate.NumOrdinates">
            <summary>
            索引个数
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.ICoordinate.X">
            <summary>
            X值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.ICoordinate.Y">
            <summary>
            Y值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.ICoordinate.Z">
            <summary>
            Z值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.ICoordinate.M">
            <summary>
            M值
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.ICoordinate.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.ICoordinate.Equals2D(EM.GIS.Geometries.Coordinate,System.Double)">
            <summary>
            判断相等
            </summary>
            <param name="c"></param>
            <param name="tolerance"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.ICoordinate.Equals3D(EM.GIS.Geometries.Coordinate)">
            <summary>
            判断相等
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.ICoordinate.Distance(EM.GIS.Geometries.Coordinate)">
            <summary>
            计算距离
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.ICoordinate.Distance3D(EM.GIS.Geometries.Coordinate)">
            <summary>
            summary
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.ICoordinate.ToDoubleArray(System.Int32)">
            <summary>
            转数组
            </summary>
            <param name="dimension"></param>
            <returns></returns>
        </member>
        <member name="T:EM.GIS.Geometries.IExtent">
            <summary>
            范围接口
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.MinX">
            <summary>
            最小X
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.MaxX">
            <summary>
            最大X
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.MinY">
            <summary>
            最小Y
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.MaxY">
            <summary>
            最大Y
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.MinM">
            <summary>
            最小M
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.MaxM">
            <summary>
            最大M
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.MinZ">
            <summary>
            最小Z
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.MaxZ">
            <summary>
            最大Z
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.HasM">
            <summary>
            有M值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.HasZ">
            <summary>
            有Z值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.X">
            <summary>
            X值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.Y">
            <summary>
            Y值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IExtent.Center">
            <summary>
            中心点
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.Contains(EM.GIS.Geometries.ICoordinate)">
            <summary>
            是否包含点
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.Contains(EM.GIS.Geometries.IExtent)">
            <summary>
            是否包含范围
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.Contains(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            是否包含范围
            </summary>
            <param name="minX"></param>
            <param name="maxX"></param>
            <param name="minY"></param>
            <param name="maxY"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.Within(EM.GIS.Geometries.IExtent)">
            <summary>
            是否包含于范围
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.Within(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            是否包含于范围
            </summary>
            <param name="minX"></param>
            <param name="maxX"></param>
            <param name="minY"></param>
            <param name="maxY"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.Intersects(EM.GIS.Geometries.IExtent)">
            <summary>
            是否相交
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.Intersects(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            是否相交
            </summary>
            <param name="minX"></param>
            <param name="maxX"></param>
            <param name="minY"></param>
            <param name="maxY"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.SetCenter(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            设置中心点
            </summary>
            <param name="centerX"></param>
            <param name="centerY"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.SetCenter(EM.GIS.Geometries.ICoordinate,System.Double,System.Double)">
            <summary>
            设置中心点
            </summary>
            <param name="center"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.SetCenter(EM.GIS.Geometries.ICoordinate)">
            <summary>
            设置中心点
            </summary>
            <param name="center"></param>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.ExpandBy(System.Double,System.Double)">
            <summary>
            扩展范围
            </summary>
            <param name="padX"></param>
            <param name="padY"></param>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.ExpandBy(System.Double)">
            <summary>
            扩展范围
            </summary>
            <param name="padding"></param>
        </member>
        <member name="M:EM.GIS.Geometries.IExtent.ExpandToInclude(EM.GIS.Geometries.IExtent)">
            <summary>
            扩展范围
            </summary>
            <param name="ext"></param>
        </member>
        <member name="T:EM.GIS.Geometries.IGeometry">
            <summary>
            几何接口
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IGeometry.GeometryType">
            <summary>
            几何类型
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IGeometry.PointCount">
            <summary>
            点个数
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IGeometry.Coord">
            <summary>
            获取第一个点
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.GetCoord(System.Int32)">
            <summary>
            获取点
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.GetAllCoords">
            <summary>
            获取所有点
            </summary>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.SetCoord(System.Int32,EM.GIS.Geometries.ICoordinate)">
            <summary>
            设置点
            </summary>
            <param name="index"></param>
            <param name="coordinate"></param>
        </member>
        <member name="P:EM.GIS.Geometries.IGeometry.GeometryCount">
            <summary>
            几何个数
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.GetGeometry(System.Int32)">
            <summary>
            获取几何
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:EM.GIS.Geometries.IGeometry.Extent">
            <summary>
            范围
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.ToWkt">
            <summary>
            转成Well-known Text
            </summary>
            <returns></returns>
        </member>
        <member name="P:EM.GIS.Geometries.IGeometry.Area">
            <summary>
            面积
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IGeometry.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.Contains(EM.GIS.Geometries.IGeometry)">
            <summary>
            是否包含
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.Intersects(EM.GIS.Geometries.IGeometry)">
            <summary>
            是否相交
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.Intersection(EM.GIS.Geometries.IGeometry)">
            <summary>
            求交集
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.Union(EM.GIS.Geometries.IGeometry)">
            <summary>
            合并
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.Distance(EM.GIS.Geometries.IGeometry)">
            <summary>
            计算距离
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:EM.GIS.Geometries.IGeometry.Distance(EM.GIS.Geometries.ICoordinate)">
            <summary>
            计算距离
            </summary>
            <param name="coord"></param>
            <returns></returns>
        </member>
        <member name="T:EM.GIS.Geometries.ILinearRing">
            <summary>
            线性环接口
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.ILinearRing.IsRing">
            <summary>
            是否是闭环
            </summary>
        </member>
        <member name="M:EM.GIS.Geometries.ILinearRing.CloseRings">
            <summary>
            闭合环
            </summary>
        </member>
        <member name="T:EM.GIS.Geometries.ILineString">
            <summary>
            线接口
            </summary>
        </member>
        <member name="T:EM.GIS.Geometries.IPoint">
            <summary>
            点接口
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IPoint.X">
            <summary>
            X值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IPoint.Y">
            <summary>
            Y值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IPoint.Z">
            <summary>
            Z值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IPoint.M">
            <summary>
            M值
            </summary>
        </member>
        <member name="P:EM.GIS.Geometries.IPolygon.Shell">
            <summary>
            外圈多边形
            </summary>
        </member>
    </members>
</doc>
